/*
 * Grafana
 * Grafana Restful API.
 *
 * OpenAPI spec version: v1.0
 * Contact: wang@hashdata.cn
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package cn.hashdata.grafana.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;

/**
 * DashboardMeta
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-17T02:02:26.692Z")
public class DashboardMeta {
  @JsonProperty("canAdmin")
  private Boolean canAdmin = null;

  @JsonProperty("canEdit")
  private Boolean canEdit = null;

  @JsonProperty("canSave")
  private Boolean canSave = null;

  @JsonProperty("canStar")
  private Boolean canStar = null;

  @JsonProperty("created")
  private OffsetDateTime created = null;

  @JsonProperty("createdBy")
  private String createdBy = null;

  @JsonProperty("expires")
  private OffsetDateTime expires = null;

  @JsonProperty("folder")
  private Boolean folder = null;

  @JsonProperty("folderId")
  private Long folderId = null;

  @JsonProperty("folderTitle")
  private String folderTitle = null;

  @JsonProperty("folderUrl")
  private String folderUrl = null;

  @JsonProperty("hasAcl")
  private Boolean hasAcl = null;

  @JsonProperty("home")
  private Boolean home = null;

  @JsonProperty("provisioned")
  private Boolean provisioned = null;

  @JsonProperty("slug")
  private String slug = null;

  @JsonProperty("snapshot")
  private Boolean snapshot = null;

  @JsonProperty("starred")
  private Boolean starred = null;

  @JsonProperty("type")
  private String type = null;

  @JsonProperty("updated")
  private OffsetDateTime updated = null;

  @JsonProperty("updatedBy")
  private String updatedBy = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("version")
  private Integer version = null;

  public DashboardMeta canAdmin(Boolean canAdmin) {
    this.canAdmin = canAdmin;
    return this;
  }

   /**
   * Get canAdmin
   * @return canAdmin
  **/
  @ApiModelProperty(value = "")
  public Boolean isCanAdmin() {
    return canAdmin;
  }

  public void setCanAdmin(Boolean canAdmin) {
    this.canAdmin = canAdmin;
  }

  public DashboardMeta canEdit(Boolean canEdit) {
    this.canEdit = canEdit;
    return this;
  }

   /**
   * Get canEdit
   * @return canEdit
  **/
  @ApiModelProperty(value = "")
  public Boolean isCanEdit() {
    return canEdit;
  }

  public void setCanEdit(Boolean canEdit) {
    this.canEdit = canEdit;
  }

  public DashboardMeta canSave(Boolean canSave) {
    this.canSave = canSave;
    return this;
  }

   /**
   * Get canSave
   * @return canSave
  **/
  @ApiModelProperty(value = "")
  public Boolean isCanSave() {
    return canSave;
  }

  public void setCanSave(Boolean canSave) {
    this.canSave = canSave;
  }

  public DashboardMeta canStar(Boolean canStar) {
    this.canStar = canStar;
    return this;
  }

   /**
   * Get canStar
   * @return canStar
  **/
  @ApiModelProperty(value = "")
  public Boolean isCanStar() {
    return canStar;
  }

  public void setCanStar(Boolean canStar) {
    this.canStar = canStar;
  }

  public DashboardMeta created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public DashboardMeta createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @ApiModelProperty(value = "")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public DashboardMeta expires(OffsetDateTime expires) {
    this.expires = expires;
    return this;
  }

   /**
   * Get expires
   * @return expires
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getExpires() {
    return expires;
  }

  public void setExpires(OffsetDateTime expires) {
    this.expires = expires;
  }

  public DashboardMeta folder(Boolean folder) {
    this.folder = folder;
    return this;
  }

   /**
   * Get folder
   * @return folder
  **/
  @ApiModelProperty(value = "")
  public Boolean isFolder() {
    return folder;
  }

  public void setFolder(Boolean folder) {
    this.folder = folder;
  }

  public DashboardMeta folderId(Long folderId) {
    this.folderId = folderId;
    return this;
  }

   /**
   * Get folderId
   * @return folderId
  **/
  @ApiModelProperty(value = "")
  public Long getFolderId() {
    return folderId;
  }

  public void setFolderId(Long folderId) {
    this.folderId = folderId;
  }

  public DashboardMeta folderTitle(String folderTitle) {
    this.folderTitle = folderTitle;
    return this;
  }

   /**
   * Get folderTitle
   * @return folderTitle
  **/
  @ApiModelProperty(value = "")
  public String getFolderTitle() {
    return folderTitle;
  }

  public void setFolderTitle(String folderTitle) {
    this.folderTitle = folderTitle;
  }

  public DashboardMeta folderUrl(String folderUrl) {
    this.folderUrl = folderUrl;
    return this;
  }

   /**
   * Get folderUrl
   * @return folderUrl
  **/
  @ApiModelProperty(value = "")
  public String getFolderUrl() {
    return folderUrl;
  }

  public void setFolderUrl(String folderUrl) {
    this.folderUrl = folderUrl;
  }

  public DashboardMeta hasAcl(Boolean hasAcl) {
    this.hasAcl = hasAcl;
    return this;
  }

   /**
   * Get hasAcl
   * @return hasAcl
  **/
  @ApiModelProperty(value = "")
  public Boolean isHasAcl() {
    return hasAcl;
  }

  public void setHasAcl(Boolean hasAcl) {
    this.hasAcl = hasAcl;
  }

  public DashboardMeta home(Boolean home) {
    this.home = home;
    return this;
  }

   /**
   * Get home
   * @return home
  **/
  @ApiModelProperty(value = "")
  public Boolean isHome() {
    return home;
  }

  public void setHome(Boolean home) {
    this.home = home;
  }

  public DashboardMeta provisioned(Boolean provisioned) {
    this.provisioned = provisioned;
    return this;
  }

   /**
   * Get provisioned
   * @return provisioned
  **/
  @ApiModelProperty(value = "")
  public Boolean isProvisioned() {
    return provisioned;
  }

  public void setProvisioned(Boolean provisioned) {
    this.provisioned = provisioned;
  }

  public DashboardMeta slug(String slug) {
    this.slug = slug;
    return this;
  }

   /**
   * Get slug
   * @return slug
  **/
  @ApiModelProperty(value = "")
  public String getSlug() {
    return slug;
  }

  public void setSlug(String slug) {
    this.slug = slug;
  }

  public DashboardMeta snapshot(Boolean snapshot) {
    this.snapshot = snapshot;
    return this;
  }

   /**
   * Get snapshot
   * @return snapshot
  **/
  @ApiModelProperty(value = "")
  public Boolean isSnapshot() {
    return snapshot;
  }

  public void setSnapshot(Boolean snapshot) {
    this.snapshot = snapshot;
  }

  public DashboardMeta starred(Boolean starred) {
    this.starred = starred;
    return this;
  }

   /**
   * Get starred
   * @return starred
  **/
  @ApiModelProperty(value = "")
  public Boolean isStarred() {
    return starred;
  }

  public void setStarred(Boolean starred) {
    this.starred = starred;
  }

  public DashboardMeta type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public DashboardMeta updated(OffsetDateTime updated) {
    this.updated = updated;
    return this;
  }

   /**
   * Get updated
   * @return updated
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getUpdated() {
    return updated;
  }

  public void setUpdated(OffsetDateTime updated) {
    this.updated = updated;
  }

  public DashboardMeta updatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * Get updatedBy
   * @return updatedBy
  **/
  @ApiModelProperty(value = "")
  public String getUpdatedBy() {
    return updatedBy;
  }

  public void setUpdatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
  }

  public DashboardMeta url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(value = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public DashboardMeta version(Integer version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @ApiModelProperty(value = "")
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DashboardMeta dashboardMeta = (DashboardMeta) o;
    return Objects.equals(this.canAdmin, dashboardMeta.canAdmin) &&
        Objects.equals(this.canEdit, dashboardMeta.canEdit) &&
        Objects.equals(this.canSave, dashboardMeta.canSave) &&
        Objects.equals(this.canStar, dashboardMeta.canStar) &&
        Objects.equals(this.created, dashboardMeta.created) &&
        Objects.equals(this.createdBy, dashboardMeta.createdBy) &&
        Objects.equals(this.expires, dashboardMeta.expires) &&
        Objects.equals(this.folder, dashboardMeta.folder) &&
        Objects.equals(this.folderId, dashboardMeta.folderId) &&
        Objects.equals(this.folderTitle, dashboardMeta.folderTitle) &&
        Objects.equals(this.folderUrl, dashboardMeta.folderUrl) &&
        Objects.equals(this.hasAcl, dashboardMeta.hasAcl) &&
        Objects.equals(this.home, dashboardMeta.home) &&
        Objects.equals(this.provisioned, dashboardMeta.provisioned) &&
        Objects.equals(this.slug, dashboardMeta.slug) &&
        Objects.equals(this.snapshot, dashboardMeta.snapshot) &&
        Objects.equals(this.starred, dashboardMeta.starred) &&
        Objects.equals(this.type, dashboardMeta.type) &&
        Objects.equals(this.updated, dashboardMeta.updated) &&
        Objects.equals(this.updatedBy, dashboardMeta.updatedBy) &&
        Objects.equals(this.url, dashboardMeta.url) &&
        Objects.equals(this.version, dashboardMeta.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canAdmin, canEdit, canSave, canStar, created, createdBy, expires, folder, folderId, folderTitle, folderUrl, hasAcl, home, provisioned, slug, snapshot, starred, type, updated, updatedBy, url, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DashboardMeta {\n");
    
    sb.append("    canAdmin: ").append(toIndentedString(canAdmin)).append("\n");
    sb.append("    canEdit: ").append(toIndentedString(canEdit)).append("\n");
    sb.append("    canSave: ").append(toIndentedString(canSave)).append("\n");
    sb.append("    canStar: ").append(toIndentedString(canStar)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    expires: ").append(toIndentedString(expires)).append("\n");
    sb.append("    folder: ").append(toIndentedString(folder)).append("\n");
    sb.append("    folderId: ").append(toIndentedString(folderId)).append("\n");
    sb.append("    folderTitle: ").append(toIndentedString(folderTitle)).append("\n");
    sb.append("    folderUrl: ").append(toIndentedString(folderUrl)).append("\n");
    sb.append("    hasAcl: ").append(toIndentedString(hasAcl)).append("\n");
    sb.append("    home: ").append(toIndentedString(home)).append("\n");
    sb.append("    provisioned: ").append(toIndentedString(provisioned)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    snapshot: ").append(toIndentedString(snapshot)).append("\n");
    sb.append("    starred: ").append(toIndentedString(starred)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

